<Window x:Class="MFC_technic.WorkerWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MFC_technic"
        mc:Ignorable="d"
        Title="Сотрудники" Height="462" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="buttonWorker" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid Background="#FFC55527" Margin="0,0,726,0">
            <Button Style="{DynamicResource buttonWorker}" Content="" HorizontalAlignment="Center" Margin="0,0,0,20" Width="32" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="btnBack" Height="32" VerticalAlignment="Bottom">
                <Button.Background>
                    <ImageBrush ImageSource="/back.png"/>
                </Button.Background>
            </Button>
        </Grid>
        <Label Content="Поиск" HorizontalAlignment="Left" Margin="79,10,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="searchBox" HorizontalAlignment="Left" Margin="123,14,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="200" TextChanged="searchBox_TextChanged"/>
        <Image Margin="0,0,2,1" Source="/mfc.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Height="86" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="240">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="-0.749"/>
                    <RotateTransform/>
                    <TranslateTransform X="0.582"/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <DataGrid x:Name="Worker" d:ItemsSource="{d:SampleData ItemCount=5}" Margin="79,38,0,110" Background="{x:Null}" BorderBrush="{x:Null}" AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Width="110" Header="Фамилия" Binding="{Binding UserSurname}"/>
                <DataGridTextColumn Width="110" Header="Имя" Binding="{Binding UserName}"/>
                <DataGridTextColumn Width="110" Header="Отчество" Binding="{Binding UserMiddleName}"/>
                <DataGridTextColumn Width="60" Header="Возраст" Binding="{Binding Age}"/>
                <DataGridTextColumn Width="119" Header="Роль" Binding="{Binding Role.RoleName}"/>
                <DataGridTextColumn Width="100" Header="Логин" Binding="{Binding Login}"/>
                <DataGridTextColumn Width="100" Header="Пароль" Binding="{Binding Password}"/>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</Window>
